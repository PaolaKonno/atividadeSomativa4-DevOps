name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  deliver:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Simular Continuous Delivery (empacotar artefatos)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/*.py
            README.md

  testes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # pode trocar para 3.11 se libs tiverem problema

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov pytest-asyncio

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -R

      - name: Run tests
        run: |
          mkdir -p junit
          # RECOMENDADO: descoberta automática (procura tests/test_*.py)
          pytest -q --junitxml=junit/test-results.xml --cov=src --cov-report=xml --cov-report=term-missing

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-and-coverage
          path: |
            junit/test-results.xml
            coverage.xml
          if-no-files-found: ignore

  deploy:
    runs-on: ubuntu-latest
    needs: deliver
    steps:
      - name: Baixar artefatos
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./artifact

      - name: Listar arquivos baixados
        run: ls -R

  docker:
    runs-on: ubuntu-latest
    needs: [deliver, testes]   # só builda Docker se testes e deliver passarem
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
